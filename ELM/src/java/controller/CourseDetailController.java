package controller;

import dao.AccountDAO;
import dao.CategoryDAO;
import dao.CourseDAO;
import dao.ChapterDAO;
import dao.EnrollmentDAO;
import dao.LessonDAO;
import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;
import java.io.IOException;
import java.util.*;
import model.Account;
import model.Category;
import model.Course;
import model.Chapter;
import model.Lesson;


public class CourseDetailController extends HttpServlet {
    @Override
    
protected void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {

    // 1Ô∏è‚É£ L·∫•y courseID t·ª´ URL
    String idParam = request.getParameter("id");
    if (idParam == null) {
        response.sendRedirect("home");
        return;
    }

    int courseID;
    try {
        courseID = Integer.parseInt(idParam);
    } catch (NumberFormatException e) {
        response.sendRedirect("home");
        return;
    }

    // 2Ô∏è‚É£ G·ªçi DAO ƒë·ªÉ l·∫•y d·ªØ li·ªáu
    CourseDAO cDao = new CourseDAO();
    ChapterDAO chDao = new ChapterDAO();
    LessonDAO lDao = new LessonDAO();
CategoryDAO catDao=new CategoryDAO();
AccountDAO aDao = new AccountDAO(); 
EnrollmentDAO eDao = new EnrollmentDAO(); // üëà th√™m d√≤ng n√†y
    
    Course course = cDao.getCourseById(courseID);
    Account instructor = aDao.getAccountById(course.getInstructorID());
    if (course == null) {
        response.sendRedirect("home");
        return;
    }

      // üîπ L·∫•y Category t∆∞∆°ng ·ª©ng v·ªõi kh√≥a h·ªçc
Category category = catDao.getCategoryById(course.getCategoryID());
    // th√™m d√≤ng n√†y
    // L·∫•y danh s√°ch ch∆∞∆°ng (chapter)
    List<Chapter> chapters = chDao.getAllChap();
    chapters.removeIf(ch -> ch.getCourseID() != courseID);

    // Map: m·ªói chapterID -> danh s√°ch b√†i h·ªçc
    Map<Integer, List<Lesson>> lessonsMap = new HashMap<>();
    for (Chapter ch : chapters) {
        List<Lesson> lessons = lDao.getByChapterID(ch.getChapterID());
        lessonsMap.put(ch.getChapterID(), lessons);
    }

    // X√°c ƒë·ªãnh ng∆∞·ªùi d√πng hi·ªán t·∫°i l√† kh√°ch hay h·ªçc vi√™n
    HttpSession session = request.getSession(false);
    String homePage;
    boolean isEnrolled = false; // üëà th√™m bi·∫øn n√†y
    if (session != null && session.getAttribute("account") != null) {
        homePage = "Learner/home_learner";
    } else {
        homePage = "home_Guest";
    }

    // G·ª≠i d·ªØ li·ªáu sang JSP
    request.setAttribute("course", course);
    request.setAttribute("category", category);
    request.setAttribute("chapters", chapters);
    request.setAttribute("lessons", lessonsMap);
    request.setAttribute("homePage", homePage);
       request.setAttribute("isEnrolled", isEnrolled); // üëà th√™m d√≤ng n√†y
       request.setAttribute("instructor", instructor);


    // Chuy·ªÉn ti·∫øp t·ªõi trang chi ti·∫øt kh√≥a h·ªçc
    request.getRequestDispatcher("courseDetail.jsp").forward(request, response);
}

}
